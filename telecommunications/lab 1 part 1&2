clear all
close all
f = 100; %freq of sinusoid
fd = 1000; % sampling freq
ttr = 1; % duration of sinusoid = 1 sec
[s] = sinusoid(f,0,ttr,fd); 
%generating sinusoid signal using function

t = 0:1/fd:ttr-1/fd;
% creates time axis for plotting sin graph
% without it, only numerical values would be displayed on axis

plot(t,s)
title('Generated Sin Signal');
xlabel('Time (s)')
ylabel('Amplitude')
figure;
spectrum(s,fd); % calculates and plots amplitude spectrum

% doesnt run on its own so you need other functions 
% because issue with sinusoid


-- separate file = 'sinusoid.m' --

function [s] = sinusoid(f,phi,duration,fs)
% f = freq
% phi = phase (radians)
% duration = signal duration
% fs = sampling freq
t = 0:1/fs:duration-1/fs; % time vector
s = sin(2*pi*f*t + phi); % sinusoidal function
end % end of function


-- separate file = 'spectrum.m' --

function spectrum(s,fs)
% inputs: signal - time-domain signal & fs - sampling freq
% outputs: none (plots amp and phase spectra)

% calc fourier transform of the signal
F = fft(s);

% calc number of samples in signal
N = length(F);

% calc freq resolution
freq_resolution = fs/N;

% create freq axis
freq_axis = 0:freq_resolution:fs-freq_resolution;
% take only positive half of spectrum (due to symmetry)
F= F(1:N/2);
freq_axis = freq_axis(1:N/2);

% calc amplitude spectrum
amplitude_spectrum = abs(F) / (N/2);

% calc phase spectrum
phase_spectrum = angle(F) / pi*180;

%plot amp spectrum
stem(freq_axis, amplitude_spectrum);
title('Amp Spectrum');
xlabel('Frequency (Hz)');
ylabel('Amplitude');
grid on;

% plot phase spectrum
figure;
stem(freq_axis, phase_spectrum);
title('Phase Spectrum');
xlabel('Frequency (Hz)');
ylabel('Phase (degrees)');
grid on;
end



